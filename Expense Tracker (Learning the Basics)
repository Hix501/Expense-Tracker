Expenses = {}
import calendar
pass1 = "PLACEHOLDER"


# Intro
x = input("Hello, this is an expense tracker, type start to start the program\n")
y = x.capitalize()
while y != "Start":
    print("Invalid input, please type Start to begin the program.\n")
    y = input()
while True:
    menu = input("What would you like to do?\n1.View budgets\n2.Summary\n3.Budgets\n4.Calendar\n5.Exit\n6.Spendings\n\n\n")

    # This is if the user picks option #3
    
    if menu == "3." or menu == "Budgets" or menu == "3.Set budgets":
        desicion = input("What would you like to do? Update, set, or delete a budget?\n")
        if desicion.lower() == "set" or desicion.lower() == "set budgets":
            another_budget = "yes"
            while another_budget.lower() == "yes":
                # Budget number
                try:
                    budget_max = float(input("What would number would you like your budget to be?\n"))
                except ValueError:  # needs fixing
                    print(f"Invalid Input, {budget_max} is not a number, please input a number.")
                    exit()
                except TypeError:
                    print(f"Invalid Input, {budget_max} is not a number, please input a number")
                    exit()
                except OverflowError:  # IDK how to test this
                    print(f"Invalid Input, please make the number smaller.")
                    exit()
                except Exception:
                    print("Something went wrong :(")
                    exit()
                if budget_max < 0:
                    print("You can't make a BUDGET A NEGATIVE NUMBER BUD >:I")
                    exit()

                # Budget date
                try:
                    budget_date = str(input("What month would you like your budget to be in?\n"))
                    budget_year = input("What year would you like your budget to be in?\n")
                except ValueError:
                    print("you cant type in numbers (e.g. 01/14/2025) >:I")
                except Exception:
                    print("Something went wrong :(")
                # Budget Category
                try:
                    budget_category = str(input("What category is your budget? Please select from the following list:\nSavings\nDebt Payment\nInsurance\nHousing\nTransportation\nFood\nPersonal\nEntertainment\nTravel\n"))
                    # Had to learn a new concept -_-'
                    # Creates a new month if its not in dictionary
                    if budget_date not in Expenses:
                        Expenses[budget_date] = {}
                    if budget_category not in Expenses[budget_date]:
                        Expenses[budget_date][budget_category] = []
                    Expenses[budget_date][budget_category].append(budget_max)
                except ValueError:
                    print("You cant type in numbers >:I")
                except Exception:
                    print("Something went wrong :(")
                another_budget = input("Would you like to set another budget?\n")
                if another_budget.lower() == "no":
                    print("Redirecting you back to menu...\n\n")
                else:
                    print("\n")
        elif desicion.lower() == "update" or desicion.lower() == "update budgets":
            update_budget_month = input("What month of a budget would you like to update?")
            update_budget_category = input (f"What category inside {update_budget_month} would you like to update?")
            updated_date_budget = input ("What date would you like your updated budget to be?")
            updated_category_budget = input("What category would you like your updated budget to be in?")
            if update_budget_month in Expenses and update_budget_category in Expenses[update_budget_month]:
                if updated_date_budget not in Expenses:
                    Expenses[updated_date_budget] = {}
                stuff = Expenses[update_budget_month][update_budget_category][:]
                Expenses[updated_date_budget][updated_category_budget] = stuff
                del Expenses[update_budget_month][update_budget_category]
                print(f"Your new budget is {Expenses[updated_date_budget][updated_category_budget]}")

            else:
                print (f"The data for {update_budget_month} and {update_budget_category} does not exist... Redirecting you back to the menu\n\n\n")
    # if the user picks option #5  
    elif menu == "5." or menu == "Exit":
        exit_choice = input("Are you sure you want to exit the program?\n")
        if exit_choice == "Yes" or exit_choice == "yes" or exit_choice == "YES, GET ME OUT OF THIS DUMP":
            break
        else:
            print("Cancelled exit...(Redirecting you back to the menu)\n\n")

    # if the user picks option #1
    elif menu == "1." or menu == "view budgets" or menu == "1.view budgets":
        filter = input("Would you like to see all budgets, or filter by date, or category?\n")
        if filter.lower() != "date" and filter.lower() != "category":
            print(Expenses)
        elif filter.lower() == "date":
            filter_month = input("What month(s) would you like to see? Please separate months by a comma\n")
            clean_months = []
            clean_categories = []
            if "," in filter_month:
                cleaner_months = filter_month.split(",")
                clean_months = cleaner_months = [month.strip() for month in cleaner_months]
            else:
                clean_months = [filter_month.strip()]
            for month in clean_months:
                if month in Expenses:
                    print(f"--- Budget for {month} ---")
                    print(Expenses[month])
                    print("")
                else:
                    print("The selected month does not exist. Redirecting you back to the menu...\n\n\n")

        elif filter.lower() == "category":
            filter_category = input("What categories would you like to see? Please seperate  by a comma.\n")
            if "," in filter_category:
                filter_categories = filter_category.split(",")
                clean_categories = [category.strip() for category in filter_categories]
            else:
                clean_categories = [filter_category.strip()]
            for category in clean_categories:
                for month in Expenses:
                    if category in Expenses[month]:
                        print(f"--- {category} in {month} ---")
                        print(Expenses[month][category])
                    else:
                        print("There is no data for this category...")
        else:
            print("Invalid Input, you have to enter category or date")
            pass

    # if the user picks option #4
    elif menu == "4." or menu.lower() == "calendar" or menu.lower() == "4.calendar":
        months = ("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
        calendar_type = input("What kind of caldendar do you want to see? Please select from the following options:\n1.12 month calendar\n2.1 month caldendar\n").lower()
        print("Also, if there is a $ symbol next to a month name, then that means you have a budget in that month.")
        if "month" in calendar_type and "1" not in calendar_type:
            try:
                month_num = months.index(budget_date) + 1
                print(calendar.month(int(budget_year), month_num))
            except Exception:
                print("Invalid month or year for calendar.")
        elif "year" in calendar_type or "12" in calendar_type:
            for month_num in range(1, 13):
                month_name = months[month_num - 1]  # convert number to month name
                cal_text = calendar.month(int(budget_year), month_num)  # generate calendar text
                cal_lines = cal_text.split("\n")  # break it into lines

                if month_name in Expenses:
                    cal_lines[0] += "  $"  # add $ if there's a budget

                print("\n".join(cal_lines))  # print the final calendar with or without $

                # Show the budget details if there are any
                if month_name in Expenses:
                    for category in Expenses[month_name]:
                        for amount in Expenses[month_name][category]:
                            print(f"  - {category}: ${amount}")
        else:
            print("No budgets for this month.\n")
    
    #if the user picks option #6
    elif menu == "6." or menu.lower() == "spendings" or menu.lower() == "6.spendings":
        budget_fillin = input ("Which budget would you like to fill in information for?").lower()
        pass
        spendings = input("How much have you spent on it?")
    elif menu == "2." or menu.lower() == "summary" or menu.lower() == "2.summary":
        print (f"You have spent {pass1} in total\nYou have {pass1} budgets in total\n You have over-spent on {pass1} budgets.")